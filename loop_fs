#!/usr/bin/perl -w
# loop_fs
# (c) Reuben Thomas  29/11/2007-1/5/2008
# Loopback fs
# Based on example code from Fuse package

use strict;

use Fuse ':all';
use Fuse::Util;

# Debug flag
$Fuse::Util::debugging = 0;

# Global settings
my ($mountpoint);


sub x_getattr {
        debug("x_getattr ");
        my $file = prepend_root(shift);
        return Fuse::Util::real_getattr($file);
}

sub x_readlink {
        debug("x_readlink ");
        my $link = prepend_root(shift);
        return Fuse::Util::real_readlink($link);
}

sub x_getdir {
        debug("x_getdir ");
        my $dir = prepend_root(shift);
        return Fuse::Util::real_getdir($dir);
}

sub x_mknod {
        debug("x_mknod ");
        my ($file, $modes, $dev) = @_;
        $file = prepend_root($file);
        return Fuse::Util::real_mknod($file, $modes, $dev);
}

sub x_unlink {
        debug("x_unlink ");
        my $file = prepend_root(shift);
        return Fuse::Util::real_unlink($file);
}

sub x_link {
        debug("x_link ");
        my $old = prepend_root(shift);
        my $new = prepend_root(shift);
        return Fuse::Util::real_link($old, $new);
}

sub x_symlink {
        debug("x_symlink ");
        my $old = prepend_root(shift);
        my $new = prepend_root(shift);
        return Fuse::Util::real_symlink($old, $new);
}

sub x_rename {
        debug("x_rename ");
        my $old = prepend_root(shift);
        my $new = prepend_root(shift);
        return Fuse::Util::real_rename($old, $new);
}

sub x_mkdir {
        debug("x_mkdir ");
        my ($dir, $perm) = @_;
        $dir = prepend_root($dir);
        return Fuse::Util::real_mkdir($dir);
}

sub x_rmdir {
        debug("x_rmdir ");
        my $dir = prepend_root(shift);
        return Fuse::Util::real_rmdir($dir);
}

sub x_chown {
        debug("x_chown ");
        my $file = prepend_root(shift);
        my ($uid, $gid) = @_;
        return Fuse::Util::real_chown($file, $uid, $gid);
}

sub x_chmod {
        debug("x_chmod ");
        my $file = prepend_root(shift);
        my $mode = shift;
        return Fuse::Util::real_chmod($file, $mode);
}

sub x_utime {
        debug("x_utime ");
        my $file = prepend_root(shift);
        my ($atime, $mtime) = @_;
        return Fuse::Util::real_utime($file, $atime, $mtime);
}

sub x_open {
        debug("x_open ");
        my $file = prepend_root(shift);
        my $mode = shift;
        return Fuse::Util::real_open($file, $mode);
}

sub x_read {
        debug("x_read ");
        my ($file, $bufsize, $off) = @_;
        $file = prepend_root($file);
        return Fuse::Util::real_read($file, $bufsize, $off);
}

sub x_write {
        debug("x_write ");
        my ($file, $buf, $off) = @_;
        $file = prepend_root($file);
        return Fuse::Util::real_write($file, $buf, $off);
}

sub x_truncate {
        debug("x_truncate ");
        my $file = prepend_root(shift);
        return Fuse::Util::real_truncate($file);
}

sub x_statfs {
        debug("x_statfs ");
        my $file = prepend_root(shift);
        return Fuse::Util::real_statfs($file);
}

sub x_listxattr {
        debug("x_listxattr ");
        my $file = prepend_root(shift);
        return Fuse::Util::real_listxattr($file);
}

sub x_getxattr {
        debug("x_getxattr ");
        my $file = prepend_root(shift);
        my $xattr = shift;
        return Fuse::Util::real_getxattr($file, $xattr);
}

sub x_setxattr {
        debug("x_setxattr ");
        my $file = prepend_root(shift);
        my ($xattr, $val, $flags) = @_; # flags can contain XATTR_CREATE and XATTR_REPLACE
        return Fuse::Util::real_setxattr($file, $xattr, $val, $flags);
}

sub x_removexattr {
        debug("x_removexattr ");
        my $file = prepend_root(shift);
        my $xattr = shift;
        return Fuse::Util::real_removexattr($file, $xattr);
}


# If you run the script directly, it will run fusermount, which will
# in turn re-run this script, hence the funky semantics.

# Parse command-line arguments
$mountpoint = "";
if (@ARGV) {
        $Fuse::Util::real_root = shift(@ARGV);
        $mountpoint = shift(@ARGV);
}

# Start up FUSE
# The order of the methods below has been carefully chosen to be a
# good order in which to implement them in a new FS.
Fuse::main(
        mountpoint  => $mountpoint,
        debug       => 0,
        getattr     => "main::x_getattr",
        readlink    => "main::x_readlink",
        getdir      => "main::x_getdir",
        mknod       => "main::x_mknod",
        unlink      => "main::x_unlink",
        link        => "main::x_link",
        symlink     => "main::x_symlink",
        rename      => "main::x_rename",
        mkdir       => "main::x_mkdir",
        rmdir       => "main::x_rmdir",
        chown       => "main::x_chown",
        chmod       => "main::x_chmod",
        utime       => "main::x_utime",
        open        => "main::x_open",
        read        => "main::x_read",
        write       => "main::x_write",
        truncate    => "main::x_truncate",
        statfs      => "main::x_statfs",
        listxattr   => "main::x_listxattr",
        getxattr    => "main::x_getxattr",
        setxattr    => "main::x_setxattr",
        removexattr => "main::x_removexattr",
);
